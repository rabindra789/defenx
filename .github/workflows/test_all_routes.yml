name: DefenX Dynamic Route Check
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  route-check:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install psutil httpx uvicorn

      # 4. Run app and test all routes dynamically
      - name: Start app and dynamically test routes
        run: |
          echo "Starting FastAPI app in background..."
          uvicorn app.main:app --host 127.0.0.1 --port 8000 &
          APP_PID=$!
          echo "Waiting for app to start..."
          sleep 5

          echo "Testing all FastAPI routes dynamically..."
          python - <<EOF
import asyncio
import httpx
from app.main import app 

# Discover all GET routes dynamically
ROUTES = [r.path for r in app.routes if "GET" in r.methods]

async def test_routes():
    async with httpx.AsyncClient(base_url="http://127.0.0.1:8000") as client:
        errors = []
        for route in ROUTES:
            try:
                r = await client.get(route, timeout=10)
                if r.status_code >= 400:
                    errors.append(f"{route} returned status {r.status_code}")
            except Exception as e:
                errors.append(f"{route} request failed: {e}")
        if errors:
            print("❌ Route errors detected:")
            for e in errors:
                print(e)
            exit(1)
        else:
            print("✅ All routes responded correctly.")

asyncio.run(test_routes())
EOF

          # Stop the app
          kill $APP_PID
